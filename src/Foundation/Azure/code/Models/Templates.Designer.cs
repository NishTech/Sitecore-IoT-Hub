
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#pragma warning disable 1591

namespace IoTHub.Foundation.Azure.Models.Templates
{
  #region Designer generated code

  using System;
  using Sitecore;
  using Sitecore.Diagnostics;
  using Sitecore.Data.Items;
  using Sitecore.Data.Fields;
  using Sitecore.Data;
  
      
  /// <summary>Represents the "IoT Hub" template.</summary>
  public partial class IoTHub : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{3D047E06-051D-4824-AC69-4FE9B3F63E92}");

    public IoTHub(Item item) : base(item) {
    }

    public static class FieldIds {
      
      public static readonly ID HubName = ID.Parse("{759A5CD3-7973-40EB-A384-B24A02B4CFE3}");

      public static readonly ID ConnectionString = ID.Parse("{744AE3A8-6CE5-44B1-B66C-D5EF99500D85}");

      public static readonly ID EventHubscompatibleEndpoint = ID.Parse("{847910F5-F701-4B8A-9C30-274EFF439A83}");

      public static readonly ID EventHubscompatiblePath = ID.Parse("{DC3A4828-D37C-4898-B44A-F8D2A4DD71BB}");

      public static readonly ID ServicePrimaryKey = ID.Parse("{D7804AC4-3E5F-4975-BE4B-80C439AB04B2}");

    }
    
    /// <summary>Gets or sets the "Hub Name" field.</summary>
    public string HubName 
    {
      get 
      {
        return this.InnerItem[FieldIds.HubName];
      }
      set
      {
        this.InnerItem[FieldIds.HubName] = value;
      }
    }
  
    /// <summary>Gets or sets the "Connection String" field.</summary>
    public string ConnectionString 
    {
      get 
      {
        return this.InnerItem[FieldIds.ConnectionString];
      }
      set
      {
        this.InnerItem[FieldIds.ConnectionString] = value;
      }
    }
  
    /// <summary>Gets or sets the "Event Hubs-compatible endpoint" field.</summary>
    public string EventHubscompatibleEndpoint 
    {
      get 
      {
        return this.InnerItem[FieldIds.EventHubscompatibleEndpoint];
      }
      set
      {
        this.InnerItem[FieldIds.EventHubscompatibleEndpoint] = value;
      }
    }
  
    /// <summary>Gets or sets the "Event Hubs-compatible path" field.</summary>
    public string EventHubscompatiblePath 
    {
      get 
      {
        return this.InnerItem[FieldIds.EventHubscompatiblePath];
      }
      set
      {
        this.InnerItem[FieldIds.EventHubscompatiblePath] = value;
      }
    }
  
    /// <summary>Gets or sets the "Service Primary Key" field.</summary>
    public string ServicePrimaryKey 
    {
      get 
      {
        return this.InnerItem[FieldIds.ServicePrimaryKey];
      }
      set
      {
        this.InnerItem[FieldIds.ServicePrimaryKey] = value;
      }
    }
  
    public static IoTHub Create(Item item) 
    {
      return new IoTHub(item);
    }

    public static implicit operator Item (IoTHub item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator IoTHub(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "IoT Device" template.</summary>
  public partial class IoTDevice : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{534E5B10-8659-4576-9C69-AA47FEAA533C}");

    public IoTDevice(Item item) : base(item) {
    }

    public static class FieldIds {
      
      public static readonly ID DeviceName = ID.Parse("{D18236D4-C125-4ADB-AC45-21DF6E2D3B6E}");

      public static readonly ID ConnectionString = ID.Parse("{D38E750A-C6DF-4F60-B755-F5880D07B1E0}");

    }
    
    /// <summary>Gets or sets the "Device Name" field.</summary>
    public string DeviceName 
    {
      get 
      {
        return this.InnerItem[FieldIds.DeviceName];
      }
      set
      {
        this.InnerItem[FieldIds.DeviceName] = value;
      }
    }
  
    /// <summary>Gets or sets the "Connection String" field.</summary>
    public string ConnectionString 
    {
      get 
      {
        return this.InnerItem[FieldIds.ConnectionString];
      }
      set
      {
        this.InnerItem[FieldIds.ConnectionString] = value;
      }
    }
  
    public static IoTDevice Create(Item item) 
    {
      return new IoTDevice(item);
    }

    public static implicit operator Item (IoTDevice item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator IoTDevice(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "IoT Device Method" template.</summary>
  public partial class IoTDeviceMethod : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{B96DDC3F-541D-428A-A68B-B0A0B34B1192}");

    public IoTDeviceMethod(Item item) : base(item) {
    }

    public static class FieldIds {
      
      public static readonly ID MethodName = ID.Parse("{7723587B-94E9-4BE1-A1E0-EAE1BB3D0C91}");

      public static readonly ID ReturnType = ID.Parse("{FB24A772-F749-4FA0-B133-107F9FBD354A}");

    }
    
    /// <summary>Gets or sets the "Method Name" field.</summary>
    public string MethodName 
    {
      get 
      {
        return this.InnerItem[FieldIds.MethodName];
      }
      set
      {
        this.InnerItem[FieldIds.MethodName] = value;
      }
    }
  
    /// <summary>Gets the "Return Type" field.</summary>
    public LookupField ReturnType 
    {
      get 
      {
        return this.InnerItem.Fields[FieldIds.ReturnType];
      }
    }
  
    public static IoTDeviceMethod Create(Item item) 
    {
      return new IoTDeviceMethod(item);
    }

    public static implicit operator Item (IoTDeviceMethod item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator IoTDeviceMethod(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "IoT Message Type" template.</summary>
  public partial class IoTMessageType : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{B8521A51-A0CF-40AC-BD76-4C4D1E900B1C}");

    public IoTMessageType(Item item) : base(item) {
    }

    public static class FieldIds {
      
      public static readonly ID Deserializer = ID.Parse("{2B8207A4-E141-4586-99D5-6311E98350C2}");

    }
    
    /// <summary>Gets the "Deserializer" field.</summary>
    public LookupField Deserializer 
    {
      get 
      {
        return this.InnerItem.Fields[FieldIds.Deserializer];
      }
    }
  
    public static IoTMessageType Create(Item item) 
    {
      return new IoTMessageType(item);
    }

    public static implicit operator Item (IoTMessageType item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator IoTMessageType(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "IoT Message Property" template.</summary>
  public partial class IoTMessageProperty : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{C8D77D21-B51E-4644-BD68-6B217193D779}");

    public IoTMessageProperty(Item item) : base(item) {
    }

    public static class FieldIds {
      
      public static readonly ID PropertyName = ID.Parse("{76052C27-6A04-40DF-B50E-64E2D5F865C0}");

    }
    
    /// <summary>Gets or sets the "Property Name" field.</summary>
    public string PropertyName 
    {
      get 
      {
        return this.InnerItem[FieldIds.PropertyName];
      }
      set
      {
        this.InnerItem[FieldIds.PropertyName] = value;
      }
    }
  
    public static IoTMessageProperty Create(Item item) 
    {
      return new IoTMessageProperty(item);
    }

    public static implicit operator Item (IoTMessageProperty item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator IoTMessageProperty(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "IoT Message Deserializer" template.</summary>
  public partial class IoTMessageDeserializer : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{FD0BC7FA-A8EA-40F8-BF51-B76EE1F501E1}");

    public IoTMessageDeserializer(Item item) : base(item) {
    }

    public static class FieldIds {
      
      public static readonly ID DeserializerType = ID.Parse("{11546A34-6105-49C9-B08B-C1561063AE52}");

    }
    
    /// <summary>Gets or sets the "Deserializer Type" field.</summary>
    public string DeserializerType 
    {
      get 
      {
        return this.InnerItem[FieldIds.DeserializerType];
      }
      set
      {
        this.InnerItem[FieldIds.DeserializerType] = value;
      }
    }
  
    public static IoTMessageDeserializer Create(Item item) 
    {
      return new IoTMessageDeserializer(item);
    }

    public static implicit operator Item (IoTMessageDeserializer item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator IoTMessageDeserializer(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
  
  #endregion
}

#pragma warning restore 1591
